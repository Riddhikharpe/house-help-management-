# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dM5R-G5Cqd1mqtgfEn8GC5L9Q4Z4hHWn
"""

import streamlit as st
import pandas as pd
import os
from datetime import datetime

# Configure file paths
EXCEL_FILE = 'house_helps.xlsx'
UPLOADS_DIR = 'uploads'

# Ensure directories exist
if not os.path.exists(UPLOADS_DIR):
    os.makedirs(UPLOADS_DIR)

# Ensure Excel file exists
if not os.path.exists(EXCEL_FILE):
    df = pd.DataFrame(columns=[
        'name', 'age', 'gender', 'address', 'contact',
        'experience', 'photo_path', 'rate', 'registration_date'
    ])
    df.to_excel(EXCEL_FILE, index=False)

# Streamlit UI
st.title("House Helps Registration and Search")

# Tabs for registration and search
tab1, tab2 = st.tabs(["Register Helper", "Search Helpers"])

# Registration tab
with tab1:
    st.header("Register a House Help")

    with st.form("register_form", clear_on_submit=True):
        name = st.text_input("Name")
        age = st.number_input("Age", min_value=1, max_value=100, step=1)
        gender = st.selectbox("Gender", ["Male", "Female", "Other"])
        address = st.text_area("Address")
        contact = st.text_input("Contact")
        experience = st.number_input("Experience (years)", min_value=0, step=1)
        rate = st.number_input("Rate (price per hour)", min_value=0.0, step=0.1)
        photo = st.file_uploader("Upload Photo", type=["jpg", "jpeg", "png"])
        submit_button = st.form_submit_button("Register")

        if submit_button:
            try:
                # Create a data dictionary
                data = {
                    'name': name,
                    'age': int(age),
                    'gender': gender,
                    'address': address,
                    'contact': contact,
                    'experience': int(experience),
                    'rate': float(rate),
                    'registration_date': datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                }

                # Handle photo upload
                if photo:
                    filename = f"{datetime.now().strftime('%Y%m%d_%H%M%S')}_{photo.name}"
                    photo_path = os.path.join(UPLOADS_DIR, filename)
                    with open(photo_path, "wb") as f:
                        f.write(photo.read())
                    data['photo_path'] = photo_path
                else:
                    data['photo_path'] = None

                # Append data to Excel
                df = pd.read_excel(EXCEL_FILE)
                df = pd.concat([df, pd.DataFrame([data])], ignore_index=True)
                df.to_excel(EXCEL_FILE, index=False)

                st.success("Registration successful!")

            except Exception as e:
                st.error(f"Error during registration: {str(e)}")

# Search tab
with tab2:
    st.header("Search for House Helps")

    max_price = st.number_input("Maximum Price", min_value=0.0, step=0.1, value=2000.0)
    search_button = st.button("Search")

    if search_button:
        try:
            df = pd.read_excel(EXCEL_FILE)
            filtered_df = df[df['rate'] <= max_price]

            if not filtered_df.empty:
                st.write("### Results:")
                st.dataframe(filtered_df[['name', 'age', 'gender', 'address', 'contact', 'experience', 'rate']])
            else:
                st.info("No helpers found within the specified price range.")

        except Exception as e:
            st.error(f"Error during search: {str(e)}")

